{"ast":null,"code":"import * as types from './actionTypes';\nexport var receiveApps = function receiveApps(data) {\n  return {\n    type: types.RECEIVE_APPS,\n    apps: data\n  };\n};\nexport var fetchApplications = function fetchApplications() {\n  return function (dispatch) {\n    return fetch('http://phobos.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/toppaidapplications/limit=100/json', {\n      method: \"GET\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJSON) {\n      console.log(responseJSON.feed.entry);\n      dispatch(receiveApps(responseJSON));\n    });\n  };\n}; // export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(loadingData())\n//         return fetch(BLL.helpers.globalVars.API_BASE_URL + '/asset/GetReportData', {\n//             method: \"GET\",\n//             credentials: 'include',\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//         }).then(response => BLL.helpers.miscHelpers.responseValidator(response)).then(response => {\n//             if (response.success) {\n//                 dispatch(initReports(response.payload))\n//             } else {\n//                 dispatch(initReports([]))\n//                 toastr.error('Error loading report data', response.messages[0]);\n//             }\n//         })\n//     }\n// }","map":{"version":3,"sources":["/Users/mbartholomew/Documents/qoc_challenge/client/src/actions/appActions.js"],"names":["types","receiveApps","data","type","RECEIVE_APPS","apps","fetchApplications","dispatch","fetch","method","then","response","json","responseJSON","console","log","feed","entry"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,SAAO;AAACC,IAAAA,IAAI,EAAEH,KAAK,CAACI,YAAb;AACPC,IAAAA,IAAI,EAAEH;AADC,GAAP;AAEH,CAHM;AAOP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOC,KAAK,CAAC,kGAAD,EAAoG;AAC9GC,MAAAA,MAAM,EAAE;AADsG,KAApG,CAAL,CAEJC,IAFI,CAEC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAFT,EAGNF,IAHM,CAGD,UAACG,YAAD,EAAkB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,IAAb,CAAkBC,KAA9B;AACAV,MAAAA,QAAQ,CAACN,WAAW,CAACY,YAAD,CAAZ,CAAR;AAEH,KAPM,CAAP;AAQD,GATD;AAUD,CAXM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as types from './actionTypes';\n\nexport const receiveApps = (data) => {\n    return {type: types.RECEIVE_APPS,\n    apps: data}\n}\n\n\n\nexport const fetchApplications = () => {\n  return (dispatch) => {\n    return fetch('http://phobos.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/toppaidapplications/limit=100/json',{\n      method: \"GET\"\n    }).then(response => response.json())\n    .then((responseJSON) => {\n        console.log(responseJSON.feed.entry);\n        dispatch(receiveApps(responseJSON))\n\n    })\n  }\n}\n\n\n\n// export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(loadingData())\n//         return fetch(BLL.helpers.globalVars.API_BASE_URL + '/asset/GetReportData', {\n//             method: \"GET\",\n//             credentials: 'include',\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//         }).then(response => BLL.helpers.miscHelpers.responseValidator(response)).then(response => {\n//             if (response.success) {\n//                 dispatch(initReports(response.payload))\n//             } else {\n//                 dispatch(initReports([]))\n//                 toastr.error('Error loading report data', response.messages[0]);\n//             }\n//         })\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}