{"ast":null,"code":"import _objectSpread from \"/Users/mbartholomew/Documents/qoc_challenge/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport initialState from './initialState';\nimport { FETCH_APPS, RECEIVE_APPS } from '../actions/actionTypes';\nexport default function apps() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.apps;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState;\n\n  switch (action.type) {\n    case FETCH_APPS:\n      console.log('FETCH APPS');\n      return action;\n\n    case RECEIVE_APPS:\n      console.log('RECEIVE APPS');\n      console.log(action.apps);\n      var applications = action.apps;\n      return _objectSpread({}, state, {\n        apps: Object.keys(applications).map(function (i) {\n          return applications[i];\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mbartholomew/Documents/qoc_challenge/client/src/reducers/appsReducer.js"],"names":["initialState","FETCH_APPS","RECEIVE_APPS","apps","state","action","newState","type","console","log","applications","Object","keys","map","i"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,wBAAvC;AAEA,eAAe,SAASC,IAAT,GAAgD;AAAA,MAAlCC,KAAkC,uEAA1BJ,YAAY,CAACG,IAAa;AAAA,MAAPE,MAAO;AAC7D,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKN,UAAL;AACEO,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,aAAOJ,MAAP;;AACF,SAAKH,YAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACF,IAAnB;AACA,UAAIO,YAAY,GAAGL,MAAM,CAACF,IAA1B;AAEA,+BAAYC,KAAZ;AAAmBD,QAAAA,IAAI,EAAEQ,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,GAA1B,CAA8B,UAAAC,CAAC;AAAA,iBAAIJ,YAAY,CAACI,CAAD,CAAhB;AAAA,SAA/B;AAAzB;;AACF;AACE,aAAOV,KAAP;AAXJ;AAaD","sourcesContent":["import initialState from './initialState';\nimport {FETCH_APPS, RECEIVE_APPS} from '../actions/actionTypes';\n\nexport default function apps(state = initialState.apps, action){\n  let newState;\n  switch (action.type){\n    case FETCH_APPS:\n      console.log('FETCH APPS')\n      return action;\n    case RECEIVE_APPS:\n      console.log('RECEIVE APPS');\n      console.log(action.apps);\n      let applications = action.apps;\n\n      return { ...state, apps: Object.keys(applications).map(i => applications[i]) };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}