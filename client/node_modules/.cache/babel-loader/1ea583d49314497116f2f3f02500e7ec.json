{"ast":null,"code":"import * as types from './actionTypes';\nexport var receiveApps = function receiveApps(data) {\n  return {\n    type: types.RECEIVE_APPS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchApplications = function fetchApplications() {\n  return function (dispatch) {\n    return fetch('https://jsonplaceholder.typicode.com/users', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      var json = response.json();\n\n      if (response.status === 200) {\n        console.log(response);\n        dispatch(receiveApps(response.payload));\n      }\n    });\n  };\n}; // export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(loadingData())\n//         return fetch(BLL.helpers.globalVars.API_BASE_URL + '/asset/GetReportData', {\n//             method: \"GET\",\n//             credentials: 'include',\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//         }).then(response => BLL.helpers.miscHelpers.responseValidator(response)).then(response => {\n//             if (response.success) {\n//                 dispatch(initReports(response.payload))\n//             } else {\n//                 dispatch(initReports([]))\n//                 toastr.error('Error loading report data', response.messages[0]);\n//             }\n//         })\n//     }\n// }","map":{"version":3,"sources":["/Users/mbartholomew/Documents/qoc_challenge/client/src/actions/appActions.js"],"names":["types","receiveApps","data","type","RECEIVE_APPS","payload","fetchApplications","dispatch","fetch","method","headers","then","response","json","status","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD;AAAA,SAAW;AAClCC,IAAAA,IAAI,EAAEH,KAAK,CAACI,YADsB;AAElCC,IAAAA,OAAO,EAAE;AAAEH,MAAAA,IAAI,EAAJA;AAAF;AAFyB,GAAX;AAAA,CAApB;AAKP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOC,KAAK,CAAC,4CAAD,EAA8C;AACxDC,MAAAA,MAAM,EAAE,KADgD;AAExDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAF+C,KAA9C,CAAL,CAKJC,IALI,CAKC,UAAAC,QAAQ,EAAI;AAClB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAX;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA4B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAL,QAAAA,QAAQ,CAACN,WAAW,CAACW,QAAQ,CAACP,OAAV,CAAZ,CAAR;AACD;AACF,KAXM,CAAP;AAYD,GAbD;AAcD,CAfM,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as types from './actionTypes';\n\nexport const receiveApps = (data) => ({\n    type: types.RECEIVE_APPS,\n    payload: { data, }\n})\n\nexport const fetchApplications = () => {\n  return (dispatch) => {\n    return fetch('https://jsonplaceholder.typicode.com/users',{\n      method: \"GET\",\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      let json = response.json();\n      if (response.status === 200){\n        console.log(response);\n        dispatch(receiveApps(response.payload))\n      }\n    })\n  }\n}\n\n\n// export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(loadingData())\n//         return fetch(BLL.helpers.globalVars.API_BASE_URL + '/asset/GetReportData', {\n//             method: \"GET\",\n//             credentials: 'include',\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//         }).then(response => BLL.helpers.miscHelpers.responseValidator(response)).then(response => {\n//             if (response.success) {\n//                 dispatch(initReports(response.payload))\n//             } else {\n//                 dispatch(initReports([]))\n//                 toastr.error('Error loading report data', response.messages[0]);\n//             }\n//         })\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}