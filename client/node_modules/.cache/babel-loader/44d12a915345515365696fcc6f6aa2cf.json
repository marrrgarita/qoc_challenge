{"ast":null,"code":"import * as types from './actionTypes';\nexport function receiveApps(json) {\n  return {\n    type: types.RECEIVE_APPS,\n    apps: json\n  };\n}\nexport var fetchApplications = function fetchApplications() {\n  return function (dispatch, getState) {\n    return fetch('http://phobos.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/toppaidapplications/limit=100/json', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      var json = response.json();\n\n      if (response.status === 200) {\n        dispatch(receiveApps(response.data));\n      }\n    });\n  };\n}; // export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(loadingData())\n//         return fetch(BLL.helpers.globalVars.API_BASE_URL + '/asset/GetReportData', {\n//             method: \"GET\",\n//             credentials: 'include',\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//         }).then(response => BLL.helpers.miscHelpers.responseValidator(response)).then(response => {\n//             if (response.success) {\n//                 dispatch(initReports(response.payload))\n//             } else {\n//                 dispatch(initReports([]))\n//                 toastr.error('Error loading report data', response.messages[0]);\n//             }\n//         })\n//     }\n// }","map":{"version":3,"sources":["/Users/mbartholomew/Documents/qoc_challenge/client/src/actions/appActions.js"],"names":["types","receiveApps","json","type","RECEIVE_APPS","apps","fetchApplications","dispatch","getState","fetch","method","headers","then","response","status","data"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAC/B,SAAO;AAACC,IAAAA,IAAI,EAAEH,KAAK,CAACI,YAAb;AAA2BC,IAAAA,IAAI,EAAEH;AAAjC,GAAP;AACD;AAED,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,WAAOC,KAAK,CAAC,kGAAD,EAAoG;AAC9GC,MAAAA,MAAM,EAAE,KADsG;AAE9GC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFqG,KAApG,CAAL,CAKJC,IALI,CAKC,UAAAC,QAAQ,EAAI;AAClB,UAAIX,IAAI,GAAGW,QAAQ,CAACX,IAAT,EAAX;;AACA,UAAIW,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AAC1BP,QAAAA,QAAQ,CAACN,WAAW,CAACY,QAAQ,CAACE,IAAV,CAAZ,CAAR;AACD;AACF,KAVM,CAAP;AAWD,GAZD;AAaD,CAdM,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as types from './actionTypes';\n\nexport function receiveApps(json){\n  return {type: types.RECEIVE_APPS, apps: json};\n}\n\nexport const fetchApplications = () => {\n  return (dispatch, getState) => {\n    return fetch('http://phobos.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/toppaidapplications/limit=100/json',{\n      method: \"GET\",\n      headers: {\n          \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      let json = response.json();\n      if (response.status === 200){\n        dispatch(receiveApps(response.data))\n      }\n    })\n  }\n}\n\n\n\n// export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(loadingData())\n//         return fetch(BLL.helpers.globalVars.API_BASE_URL + '/asset/GetReportData', {\n//             method: \"GET\",\n//             credentials: 'include',\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//         }).then(response => BLL.helpers.miscHelpers.responseValidator(response)).then(response => {\n//             if (response.success) {\n//                 dispatch(initReports(response.payload))\n//             } else {\n//                 dispatch(initReports([]))\n//                 toastr.error('Error loading report data', response.messages[0]);\n//             }\n//         })\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}